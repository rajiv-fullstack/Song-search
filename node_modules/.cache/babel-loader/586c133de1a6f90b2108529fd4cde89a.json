{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = dateParser;\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction dateParser(date) {\n  var parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  var parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    var _parts$map = parts.map(function (x) {\n      return parseInt(x);\n    }),\n        _parts$map2 = _toArray(_parts$map),\n        firstP = _parts$map2[0],\n        secondP = _parts$map2[1],\n        restPs = _parts$map2.slice(2);\n\n    var correctedParts = [firstP, secondP - 1].concat(_toConsumableArray(restPs));\n    var isoDate = new Date(Date.UTC.apply(Date, _toConsumableArray(correctedParts)));\n    return isoDate;\n  }\n}","map":{"version":3,"sources":["/home/mandeep/Downloads/Song-sorch work/site/node_modules/react-timeago/lib/dateParser.js"],"names":["Object","defineProperty","exports","value","dateParser","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","isArray","_arrayLikeToArray","_toArray","_arrayWithHoles","_nonIterableRest","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","len","length","i","arr2","iter","Symbol","iterator","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","_parts$map","map","x","parseInt","_parts$map2","firstP","secondP","restPs","correctedParts","concat","isoDate","UTC","apply"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = dateParser;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction dateParser(date) {\n  var parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  var parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    var _parts$map = parts.map(function (x) {\n      return parseInt(x);\n    }),\n        _parts$map2 = _toArray(_parts$map),\n        firstP = _parts$map2[0],\n        secondP = _parts$map2[1],\n        restPs = _parts$map2.slice(2);\n\n    var correctedParts = [firstP, secondP - 1].concat(_toConsumableArray(restPs));\n    var isoDate = new Date(Date.UTC.apply(Date, _toConsumableArray(correctedParts)));\n    return isoDate;\n  }\n}"]},"metadata":{},"sourceType":"script"}