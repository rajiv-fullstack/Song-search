{"ast":null,"code":"import _slicedToArray from\"/home/mandeep/Downloads/Song-sorch work/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";var useCountdown=function useCountdown(targetDate){var countDownDate=new Date(\"March 27, 2022 24:00:00\").getTime();var _useState=useState(countDownDate-new Date().getTime()),_useState2=_slicedToArray(_useState,2),countDown=_useState2[0],setCountDown=_useState2[1];useEffect(function(){var interval=setInterval(function(){setCountDown(countDownDate-new Date().getTime());},1000);return function(){return clearInterval(interval);};},[countDownDate]);return getReturnValues(countDown);};var getReturnValues=function getReturnValues(countDown){// calculate time left\nconsole.log(countDown);var days=Math.floor(countDown/(1000*60*60*24));var hours=Math.floor(countDown%(1000*60*60*24)/(1000*60*60));var minutes=Math.floor(countDown%(1000*60*60)/(1000*60));var seconds=Math.floor(countDown%(1000*60)/1000);return[days,hours,minutes,seconds];};export{useCountdown};","map":{"version":3,"sources":["/home/mandeep/Downloads/Song-sorch work/site/src/useCountdown.js"],"names":["useEffect","useState","useCountdown","targetDate","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","console","log","days","Math","floor","hours","minutes","seconds"],"mappings":"mKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAgB,CACnC,GAAMC,CAAAA,aAAa,CAAG,GAAIC,CAAAA,IAAJ,CAAS,yBAAT,EAAoCC,OAApC,EAAtB,CAEA,cAAkCL,QAAQ,CACxCG,aAAa,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EADwB,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAIAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjCF,YAAY,CAACJ,aAAa,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAjB,CAAZ,CACD,CAF2B,CAEzB,IAFyB,CAA5B,CAIA,MAAO,kBAAMK,CAAAA,aAAa,CAACF,QAAD,CAAnB,EAAP,CACD,CANQ,CAMN,CAACL,aAAD,CANM,CAAT,CAQA,MAAOQ,CAAAA,eAAe,CAACL,SAAD,CAAtB,CACD,CAhBD,CAkBA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,SAAD,CAAe,CACrC;AACAM,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACA,GAAMQ,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWV,SAAS,EAAI,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAArB,CAApB,CAAb,CACA,GAAMW,CAAAA,KAAK,CAAGF,IAAI,CAACC,KAAL,CACXV,SAAS,EAAI,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAArB,CAAV,EAAuC,KAAO,EAAP,CAAY,EAAnD,CADY,CAAd,CAGA,GAAMY,CAAAA,OAAO,CAAGH,IAAI,CAACC,KAAL,CAAYV,SAAS,EAAI,KAAO,EAAP,CAAY,EAAhB,CAAV,EAAkC,KAAO,EAAzC,CAAX,CAAhB,CACA,GAAMa,CAAAA,OAAO,CAAGJ,IAAI,CAACC,KAAL,CAAYV,SAAS,EAAI,KAAO,EAAX,CAAV,CAA4B,IAAvC,CAAhB,CAEA,MAAO,CAACQ,IAAD,CAAOG,KAAP,CAAcC,OAAd,CAAuBC,OAAvB,CAAP,CACD,CAXD,CAaA,OAASlB,YAAT","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useCountdown = (targetDate) => {\n  const countDownDate = new Date(\"March 27, 2022 24:00:00\").getTime();\n\n  const [countDown, setCountDown] = useState(\n    countDownDate - new Date().getTime()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = (countDown) => {\n  // calculate time left\n  console.log(countDown);\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n  );\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n  return [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };\n"]},"metadata":{},"sourceType":"module"}