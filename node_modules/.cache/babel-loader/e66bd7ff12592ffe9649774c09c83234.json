{"ast":null,"code":"import _slicedToArray from \"/home/mandeep/Downloads/Song-sorch work/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mandeep/Downloads/Song-sorch work/site/src/CountdownTimer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport DateTimeDisplay from \"./DateTimeDisplay\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ExpiredNotice = function ExpiredNotice() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expired-notice\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Expired!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a future date and time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ExpiredNotice;\n\nvar ShowCounter = function ShowCounter(_ref) {\n  var days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-counter\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"countdown-link\",\n      children: [/*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: days,\n        type: \"Days\",\n        isDanger: days <= 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: hours,\n        type: \"Hours\",\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: minutes,\n        type: \"Mins\",\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n        value: seconds,\n        type: \"Seconds\",\n        isDanger: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = ShowCounter;\n\nvar CountdownTimer = function CountdownTimer(_ref2) {\n  _s();\n\n  var targetDate = _ref2.targetDate;\n\n  var _useCountdown = useCountdown(targetDate),\n      _useCountdown2 = _slicedToArray(_useCountdown, 4),\n      days = _useCountdown2[0],\n      hours = _useCountdown2[1],\n      minutes = _useCountdown2[2],\n      seconds = _useCountdown2[3];\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(ExpiredNotice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, _this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ShowCounter, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this);\n  }\n};\n\n_s(CountdownTimer, \"k4nYSprLtbeXmgny6/HJFuVOyFU=\", false, function () {\n  return [useCountdown];\n});\n\n_c3 = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExpiredNotice\");\n$RefreshReg$(_c2, \"ShowCounter\");\n$RefreshReg$(_c3, \"CountdownTimer\");","map":{"version":3,"sources":["/home/mandeep/Downloads/Song-sorch work/site/src/CountdownTimer.js"],"names":["React","DateTimeDisplay","useCountdown","ExpiredNotice","ShowCounter","days","hours","minutes","seconds","CountdownTimer","targetDate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAPD;;KAAMA,a;;AASN,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAuC;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEH,IAAxB;AAA8B,QAAA,IAAI,EAAE,MAApC;AAA4C,QAAA,QAAQ,EAAEA,IAAI,IAAI;AAA9D;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,KAAxB;AAA+B,QAAA,IAAI,EAAE,OAArC;AAA8C,QAAA,QAAQ,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,OAAxB;AAAiC,QAAA,IAAI,EAAE,MAAvC;AAA+C,QAAA,QAAQ,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC,OAAxB;AAAiC,QAAA,IAAI,EAAE,SAAvC;AAAkD,QAAA,QAAQ,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CAdD;;MAAMJ,W;;AAgBN,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,QAAoB;AAAA;;AAAA,MAAjBC,UAAiB,SAAjBA,UAAiB;;AACzC,sBAAwCR,YAAY,CAACQ,UAAD,CAApD;AAAA;AAAA,MAAOL,IAAP;AAAA,MAAaC,KAAb;AAAA,MAAoBC,OAApB;AAAA,MAA6BC,OAA7B;;AAEA,MAAIH,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;AACzC,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAFD,MAEO;AACL,wBACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,aADF;AAQD;AACF,CAfD;;GAAMC,c;UACoCP,Y;;;MADpCO,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport DateTimeDisplay from \"./DateTimeDisplay\";\nimport { useCountdown } from \"./useCountdown\";\n\nconst ExpiredNotice = () => {\n  return (\n    <div className=\"expired-notice\">\n      <span>Expired!!!</span>\n      <p>Please select a future date and time.</p>\n    </div>\n  );\n};\n\nconst ShowCounter = ({ days, hours, minutes, seconds }) => {\n  return (\n    <div className=\"show-counter\">\n      <a href=\"#\" className=\"countdown-link\">\n        <DateTimeDisplay value={days} type={\"Days\"} isDanger={days <= 3} />\n        <span>:</span>\n        <DateTimeDisplay value={hours} type={\"Hours\"} isDanger={false} />\n        <span>:</span>\n        <DateTimeDisplay value={minutes} type={\"Mins\"} isDanger={false} />\n        <span>:</span>\n        <DateTimeDisplay value={seconds} type={\"Seconds\"} isDanger={false} />\n      </a>\n    </div>\n  );\n};\n\nconst CountdownTimer = ({ targetDate }) => {\n  const [days, hours, minutes, seconds] = useCountdown(targetDate);\n\n  if (days + hours + minutes + seconds <= 0) {\n    return <ExpiredNotice />;\n  } else {\n    return (\n      <ShowCounter\n        days={days}\n        hours={hours}\n        minutes={minutes}\n        seconds={seconds}\n      />\n    );\n  }\n};\n\nexport default CountdownTimer;\n"]},"metadata":{},"sourceType":"module"}