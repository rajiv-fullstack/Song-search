{"ast":null,"code":"import _slicedToArray from \"/home/mandeep/Downloads/Song-sorch work/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nvar useCountdown = function useCountdown(targetDate) {\n  _s();\n\n  var countDownDate = new Date(\"March 27, 2022 24:00:00\").getTime();\n\n  var _useState = useState(countDownDate - new Date().getTime()),\n      _useState2 = _slicedToArray(_useState, 2),\n      countDown = _useState2[0],\n      setCountDown = _useState2[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [countDownDate]);\n  return getReturnValues(countDown);\n};\n\n_s(useCountdown, \"+9zWhIOWADc8hK60aUgFV91+m8I=\");\n\nvar getReturnValues = function getReturnValues(countDown) {\n  // calculate time left\n  console.log(countDown);\n  var days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  var hours = Math.floor(countDown % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  var minutes = Math.floor(countDown % (1000 * 60 * 60) / (1000 * 60));\n  var seconds = Math.floor(countDown % (1000 * 60) / 1000);\n  return [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };","map":{"version":3,"sources":["/home/mandeep/Downloads/Song-sorch work/site/src/useCountdown.js"],"names":["useEffect","useState","useCountdown","targetDate","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","console","log","days","Math","floor","hours","minutes","seconds"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AAAA;;AACnC,MAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,yBAAT,EAAoCC,OAApC,EAAtB;;AAEA,kBAAkCL,QAAQ,CACxCG,aAAa,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EADwB,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAIAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCF,MAAAA,YAAY,CAACJ,aAAa,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB,CAAZ;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO;AAAA,aAAMK,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACD,GANQ,EAMN,CAACL,aAAD,CANM,CAAT;AAQA,SAAOQ,eAAe,CAACL,SAAD,CAAtB;AACD,CAhBD;;GAAML,Y;;AAkBN,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACL,SAAD,EAAe;AACrC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,MAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWV,SAAS,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAApB,CAAb;AACA,MAAMW,KAAK,GAAGF,IAAI,CAACC,KAAL,CACXV,SAAS,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAV,IAAuC,OAAO,EAAP,GAAY,EAAnD,CADY,CAAd;AAGA,MAAMY,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYV,SAAS,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAV,IAAkC,OAAO,EAAzC,CAAX,CAAhB;AACA,MAAMa,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYV,SAAS,IAAI,OAAO,EAAX,CAAV,GAA4B,IAAvC,CAAhB;AAEA,SAAO,CAACQ,IAAD,EAAOG,KAAP,EAAcC,OAAd,EAAuBC,OAAvB,CAAP;AACD,CAXD;;AAaA,SAASlB,YAAT","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useCountdown = (targetDate) => {\n  const countDownDate = new Date(\"March 27, 2022 24:00:00\").getTime();\n\n  const [countDown, setCountDown] = useState(\n    countDownDate - new Date().getTime()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = (countDown) => {\n  // calculate time left\n  console.log(countDown);\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n  );\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n  return [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };\n"]},"metadata":{},"sourceType":"module"}